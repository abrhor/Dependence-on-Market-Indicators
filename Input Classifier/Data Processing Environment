import numpy as np
import pandas as pd
import talib as T
import quandl
import matplotlib.pyplot as plt

class GetData(self):
  def __init__(self, ticker):
    self.df = quandl.get("WIKI/" + ticker)
    self.close = np.array(self.df.loc[:, "Close"].tolist)
    self.highs = np.array(self.df.loc[:, "High"].tolist)
    self.lows = np.array(self.df.loc[:, "Low"].tolist)
    self.volume = np.array(self.df.loc[:, "Volume"].tolist)
  
  def percent_change(self):
    
    def f(first, second):
      ans = (second - first) * 100. / first
      return ans
    
    self.change = np.array([])
    for n, item in enumerate(self.close):            
      self.change = np.append(self.change, f(array[n-1], array[n]))      
    else:  
      return self.change
  
  def indicators(self):
    self.rsi = T.RSI(self.close)[14:]
    self.upper, self.mid, self.lower = T.BBANDS(self.close)
    self.bbwidth = (self.upper - self.lower) / self.mid
    self.mfi = T.MFI(high=self.highs, low=self.lows, close=self.close, volume=self.volume, timeperiod=14)
   
  def RSI_zscores(self):
    numerator = self.rsi[-1] - np.nanmean(self.rsi)
    denominator = np.nanstd(self.rsi) * 3.
    return numerator / denominator
  
  def sample_rsi(self):
    numerator = self.rsi - np.nanmean(self.rsi)
    denom = np.nanstd(self.rsi) * 3.
    score = numerator / denom
    ax = plt.scatter(score[1:], self.rsi[:- 1])
    f = return i for i in score if 
    return ax
  
  
  
          
